knitr::opts_chunk$set(echo = TRUE,out.extra='',fig.pos="H")
install.packages("knitr")
setwd("C:/Users/sflan/Documents/GitHub/literature-review/qgb_data/")
knitr::opts_chunk$set(echo = TRUE,out.extra='',fig.pos="H")
knitr::opts_knit$set(root.dir='../qgb_data/')
source("../R/literature-review.R")
library(scales)
install.packages("scales")
knitr::opts_chunk$set(echo = TRUE,out.extra='',fig.pos="H")
knitr::opts_knit$set(root.dir='../qgb_data/')
source("../R/literature-review.R")
library(scales)
library(knitr)
orig.file<-data.frame(read.delim("qgb.txt",sep='\t',quote=""),stringsAsFactors = FALSE)
qgb<-data.frame(read.csv("qgb.csv",header = TRUE),stringsAsFactors = FALSE)
qgb<-qgb[qgb$Human != "human",]
qgb<-search_line(c("none","not relevant","not behavior","not a behavior","not quantitative genetics","meeting abstract",
"not useful","plant","no abstract","just the abstract"),"Relevance.to.article",qgb,inverse = TRUE)
synth<-c(grep("review",qgb$Methods), grep("synthesis",qgb$Methods),grep("meta.*analysis",qgb$Methods),
grep("position p.*",qgb$Methods), grep("commentary",qgb$Methods), grep("intro.*issue",qgb$Methods))
syn<-qgb[synth[!duplicated(synth)],]
exp<-qgb[-synth[!duplicated(synth)],]
models<-c(grep("^model",exp$Methods),grep("stats",exp$Methods),grep("mathematical",exp$Methods),grep("statistical",exp$Methods),
grep("evolutionary model",exp$Methods),grep("theoretical model",exp$Methods), grep("simulation model",exp$Methods),
grep("game theoretic model",exp$Methods))
mod<-exp[models[!duplicated(models)],]
exp<-exp[-models[!duplicated(models)],]
paroff<-count_lines(keywords = "parent-offspring regression",column.name = "Method.classification",dat=exp)
#sibs
fullsib<-count_lines(keywords = "full-sib",column.name = "Method.classification",dat=exp,
remwords=c("cross-foster","common-garden","half/","selection"))
halfsib<-count_lines(keywords = "half-sib",column.name = "Method.classification",dat=exp,
remwords=c("cross-foster","common-garden","/full","selection"))
halfful<-count_lines(keywords = "half/full-sib",column.name = "Method.classification",dat=exp,
remwords=c("cross-foster","common-garden","selection"))
crfossib<-count_lines(keywords = "cross-foster",column.name = "Method.classification",dat=exp,
remwords=c("pedigree","F2"))
cgsib<-count_lines(keywords = "common-garden",column.name = "Method.classification",dat=exp)
#clones
clones<-count_lines(keywords = "clones",column.name = "Method.classification",dat=exp)
#cross-classified
factorial<-count_lines(keywords = "factorial",column.name = "Method.classification",dat=exp)
diallel<-count_lines(keywords = "diallel",column.name = "Method.classification",dat=exp)
backcross<-count_lines(keywords = "backcross",column.name = "Method.classification",dat=exp)
reciprocal<-count_lines(keywords = c("reciprocal","recirpocal"),column.name = "Method.classification",
dat=exp,"selection")
inbred<-count_lines(keywords = c("inbred","F\\d+"),column.name = "Method.classification",dat=exp,
remwords=c("backcross","reciprocal"))
crsfosf2<-count_lines(keywords = "cross-foster.*F2",column.name = "Method.classification",dat=exp)
#selection
selection<-count_lines(keywords =c("experiment", "selection"),column.name = "Method.classification",dat=exp)
#relatedness
pedigree<-count_lines(keywords = "pedigree",column.name = "Method.classification",dat=exp)
relatedness<-count_lines(keywords = "relatedness",column.name = "Method.classification",dat=exp)
#other
phenotype<-count_lines(keywords = "phenotypes",column.name = "Method.classification",dat=exp)
repeatability<-count_lines(keywords = "repeatability",column.name = "Method.classification",dat=exp)
other<-count_lines(".*","Method.classification",exp,
remwords=c("parent-offspring regression","full-sib","half-sib","half/full-sib",
"cross-foster","common-garden","clones","factorial","diallel","inbred",
"selection","pedigree","relatedness","QTL","GWAS","reciprocal",
"backcross","recirpocal","experiment","phenotype","repeatability","F\\d+"))
#QTL/GWAS
qtl<-count_lines(keywords = "QTL",column.name = "Method.classification",dat=exp)
gwas<-count_lines(keywords = "GWAS",column.name = "Method.classification",dat=exp)
kable(data.frame(Experiment=c("Parent-offspring Regression","Full-sib","Half-sib",
"Half and full-sib","Cross foster","Common garden",
"clones","factorial","inbred","backcross","reciprocal",
"diallel","selection","pedigree","relatedness","phenotype",
"repeatability","other","qtl","gwas"),
Counts=c(paroff,fullsib,halfsib,halfful,crfossib,cgsib,
clones,factorial,diallel,backcross,reciprocal,
inbred,selection,pedigree,relatedness,phenotype,
repeatability, other,qtl,gwas)))
regression<-search_line(keywords = "parent-offspring regression",column.name = "Method.classification",dat=exp)
#sibs
sibs<-search_line(keywords = c("cross-foster","sib","common-garden"),
column.name = "Method.classification",dat=exp,
remwords=c("pedigree","F2","selection","experiment"))
#clones
clones<-search_line(keywords = "clones",column.name = "Method.classification",dat=exp)
#cross-classified
crosses<-search_line(keywords = c("factorial","diallel","backcross","reciprocal","recirpocal",
"inbred","F\\d+", "cross-foster.*F2"),
column.name = "Method.classification",dat=exp)
#selection
selection<-search_line(keywords =c("experiment", "selection"),column.name = "Method.classification",dat=exp)
#relatedness
complex<-search_line(keywords = c("pedigree","relatedness"),column.name = "Method.classification",dat=exp)
#other
other<-search_line(c(".*","phenotypes","repeatability"),"Method.classification",exp,
remwords=c("parent-offspring regression","full-sib","half-sib","half/full-sib",
"cross-foster","common-garden","clones","factorial","diallel","inbred",
"selection","pedigree","relatedness","QTL","GWAS","reciprocal",
"backcross","recirpocal","experiment","F\\d+"))
#genetics
genetics<-search_line(keywords = c("QTL","GWAS"),column.name = "Method.classification",dat=exp)
#plot it
yrs<-do.call(rbind,lapply(levels(factor(exp$PY)),function(year){
df<-data.frame(ParentOffspringRegression=nrow(regression[regression$PY==year,]),
Sibs=nrow(sibs[sibs$PY==year,]),
Clones=nrow(clones[clones$PY==year,]),
CrossClassifiedDesigns=nrow(crosses[crosses$PY==year,]),
Selection=nrow(selection[selection$PY==year,]),
ComplexRelatedness=nrow(complex[complex$PY==year,]),
OtherDesigns=nrow(other[other$PY==year,]),
Genetics=nrow(genetics[genetics$PY==year,]))
}))
rownames(yrs)<-levels(factor(exp$PY))
cols<-c('#d73027','#f46d43','#fdae61','#fee090','#e0f3f8','#abd9e9','#74add1','#4575b4')
names(cols)<-colnames(yrs)
ltys<-c(1:6,2,3)
names(ltys)<-colnames(yrs)
pchs<-c(0,1,2,6,15,17:19)
plot(range(levels(factor(exp$PY))),c(0,max(yrs)),bty='l',type = 'n',
xlab="Year",ylab="Number of Studies",axes=FALSE)
for(i in 1:ncol(yrs)){
points(levels(factor(exp$PY)),yrs[,i],col=alpha(cols[i],0.75),pch=pchs[i],cex=2)
lines(levels(factor(exp$PY)),yrs[,i],col=alpha(cols[i],0.75),lty=ltys[i],lwd=2)
}
legend("topleft",colnames(yrs),col=cols,lty=ltys,bty='n',lwd=2,pch=pchs,cex=2)
axis(1,at=seq(1968,2018,10))
axis(2,las=1)
#try a bar chart
bp<-barplot(t(yrs),col=cols,border = NA,axes=FALSE)
legend("topleft",colnames(yrs),col=cols,bty='n',pch=15)
text(label=rownames(yrs),bp,-2,xpd=TRUE,srt=90)
axis(2,las=1,at=seq(0,30,5))
mtext("Number of Studies",2,line=2)
kable(table(factor(exp$species))[order(table(factor(exp$species)),decreasing = TRUE)],col.names = c("Species name","Number of studies"))
kable(table(factor(exp$common.name))[order(table(factor(exp$common.name)),decreasing = TRUE)],col.names = c("Common name","Number of studies"))
kable(table(factor(exp$Class))[order(table(factor(exp$Class)),decreasing = TRUE)],col.names = c("Class","Number of studies"))
# Creating a table in the format that I want, with class and species and number of studies.
spp<-data.frame(table(factor(exp$species))[order(table(factor(exp$species)),decreasing = TRUE)])
colnames(spp)<-c("Species","Number.of.studies")
spp$Class<-unlist(lapply(spp$Species,function(sp,df){
unique(df[df$species %in% sp,"Class"])
},df=exp))
cls<-data.frame(table(factor(exp$Class))[order(table(factor(exp$Class)),decreasing = TRUE)])
colnames(cls)<-c("Class","Number.of.studies")
cls<-data.frame(Species="All",Number.of.studies=cls$Number.of.studies,Class=cls$Class,stringsAsFactors = FALSE)
spcl<-data.frame(rbind(spp,cls),stringsAsFactors = FALSE)
write.table(spcl[order(spcl$Class,spcl$Number.of.studies,decreasing=TRUE),c(3,1,2)],"qgbSpeciesClass.csv",row.names=FALSE,sep=",")
cats<-count_filled_lines(exp,16:(ncol(exp)-1))#apply(exp[,16:(ncol(exp)-1)],2,function(c){ length(c[c!=""])})
kable(cats[order(cats,decreasing = TRUE)],col.names = "Number of studies")
write.table(cats[order(cats,decreasing = TRUE)],"QGB_categories.csv",sep=",")
catyrs<-do.call(rbind,lapply(levels(factor(exp$PY)),function(year,exp,cats){
yr<-exp[exp$PY==year,]
cnts<-apply(yr[,names(cats)],2,function(d){ length(d[d!=""])})
return(cnts)
},exp=exp,cats=cats))
color <- c("#e6194b","#3cb44b","#ffe119","#0082c8","#f58231","#911eb3","#46f0f0","#f032e6","#d2f53c",
"#fabebe","#008080","#e6beff","#aa6e28","#fffac8","#800000","#aaffc3","#808000","#ffd8b1",
"#000080","#808080","#FFFFFF","#000000")
#Don't include this one
col<-color[1:length(catyrs)]
bp<-barplot(t(catyrs),
col=col,las=1,border = NA,axes = FALSE)
legend("topleft",colnames(catyrs),
col=col,bty='n',pch=15)
axis(2,las=1,at=seq(0,50,10))
text(bp,-2,xpd=TRUE,srt=90,labels = levels(factor(exp$PY)))
mtext("Number of studies",2,line=2)
col<-color[1:length(catyrs[,!colnames(catyrs)%in%c("Plasticity","Phenotypic.gambit","IGE","GxE")])]
bp<-barplot(t(catyrs[,!colnames(catyrs)%in%c("Plasticity","Phenotypic.gambit","IGE","GxE")]),
col=col,las=1,border = NA,axes = FALSE)
legend("topleft",colnames(catyrs[,!colnames(catyrs)%in%c("Plasticity","Phenotypic.gambit","IGE","GxE")]),
col=col,bty='n',pch=15)
axis(2,las=1,at=seq(0,50,10))
text(bp,-2,xpd=TRUE,srt=90,labels = levels(factor(exp$PY)))
mtext("Number of studies",2,line=2)
pers<-qgb[qgb$Personality!="",]
synth<-c(grep("review",pers$Methods), grep("synthesis",pers$Methods),grep("meta.*analysis",pers$Methods),
grep("position p.*",pers$Methods), grep("commentary",pers$Methods), grep("intro.*issue",pers$Methods))
psyn<-pers[synth[!duplicated(synth)],]
pexp<-pers[-synth[!duplicated(synth)],]
models<-c(grep("^model",pexp$Methods),grep("stats",pexp$Methods),grep("mathematical",pexp$Methods),grep("statistical",pexp$Methods),
grep("evolutionary model",pexp$Methods),grep("theoretical model",pexp$Methods), grep("simulation model",pexp$Methods),
grep("game theoretic model",pexp$Methods))
pmod<-pexp[models[!duplicated(models)],]
pexp<-pexp[-models[!duplicated(models)],]
kable(table(factor(pexp$species))[order(table(factor(pexp$species)),decreasing = TRUE)],col.names = c("Species name","Number of studies"))
kable(table(factor(pexp$common.name))[order(table(factor(pexp$common.name)),decreasing = TRUE)],col.names = c("Common name","Number of studies"))
kable(table(factor(pexp$Class))[order(table(factor(pexp$Class)),decreasing = TRUE)],col.names = c("Class","Number of studies"))
pery<-data.frame(table(pers$PY))
colnames(pery)<-c("Year","NumPapers")
png("figs/Personality_Timeline.png",height=4,width=6,units="in",res=300)
par(mar=c(4,4,2,2))
plot(as.numeric(as.character(pery$Year)),pery$NumPapers,bty='l',xlab="Year",ylab="Number of Papers",
xaxt='n',pch=19,las=1)
axis(1,at=seq(min(as.numeric(as.character(pery$Year))),max(as.numeric(as.character(pery$Year)))),labels = NA)
text(x=seq(min(as.numeric(as.character(pery$Year))),max(as.numeric(as.character(pery$Year))),3),y=-1.25,
xpd=TRUE,srt=90,labels = seq(min(as.numeric(as.character(pery$Year))),max(as.numeric(as.character(pery$Year))),3))
dev.off()
plasticity<-exp[exp$Plasticity!="",]
cnt<-count_filled_lines(plasticity,16:(ncol(plasticity)-1))
#or proportionally
prp<-count_filled_lines(plasticity,16:(ncol(plasticity)-1))/nrow(exp[exp$Plasticity!="",])
kable(data.frame(names(cnt),cnt,prp,stringsAsFactors = FALSE),
col.names = c("Category","Number of studies","Proportion of those with plasticity"),row.names=FALSE)
ige<-exp[exp$IGE!="",]
cnt<-count_filled_lines(ige,16:(ncol(ige)-1))
#or proportionally
prp<-count_filled_lines(ige,16:(ncol(ige)-1))/nrow(exp[exp$IGE!="",])
kable(data.frame(names(cnt),cnt,prp,stringsAsFactors = FALSE),
col.names = c("Category","Number of studies","Proportion of those with plasticity"),row.names=FALSE)
gxe<-exp[exp$GxE!="",]
cnt<-count_filled_lines(gxe,16:(ncol(gxe)-1))
#or proportionally
prp<-count_filled_lines(gxe,16:(ncol(gxe)-1))/nrow(exp[exp$GxE!="",])
kable(data.frame(names(cnt),cnt,prp,stringsAsFactors = FALSE),
col.names = c("Category","Number of studies","Proportion of those with plasticity"),row.names=FALSE)
head(yrs)
which(rownames(yrs)==2018)
#remove ones from 2018
yrs<-yrs[-which(rownames(yrs)==2018),]
par(mfrow=c(2,1),mar=c(0.5,2,1,2),oma=c(2,2,2,2))
cols<-color[1:ncol(yrs)]
bp<-barplot(t(yrs),col=cols,border = NA,axes=FALSE,xaxt='n')
legend(x = -1,y=31,c("Parent-offspring regression","Sibling designs","Clones","Cross-classified designs",
"Selection experiments","Complex relatedness","Other designs", "Genetics"),
col=cols,bty='n',pch=15,xpd=TRUE)
#text(label=rownames(yrs),bp,-3,xpd=TRUE,srt=90)
axis(2,las=1,at=seq(0,30,5))
bp<-barplot(t(yrs),col=cols,border = NA,axes=FALSE,xaxt='n')
dev.off()
t(yrs)
cols
barplot(t(yrs),col=cols,border = NA,axes=FALSE,xaxt='n')
head(catyrs)
dim(catyrs)
dim(yrs)
catyrs<-catyrs[-which(rownames(yrs)==2018),]
png("figs/YearPlots.png",height=6,width=6,res=300,units="in")
par(mfrow=c(2,1),mar=c(0.5,2,1,2),oma=c(2,2,2,2))
cols<-color[1:ncol(yrs)]
bp<-barplot(t(yrs),col=cols,border = NA,axes=FALSE,xaxt='n')
legend(x = -1,y=31,c("Parent-offspring regression","Sibling designs","Clones","Cross-classified designs",
"Selection experiments","Complex relatedness","Other designs", "Genetics"),
col=cols,bty='n',pch=15,xpd=TRUE)
#text(label=rownames(yrs),bp,-3,xpd=TRUE,srt=90)
axis(2,las=1,at=seq(0,30,5))
par(mar=c(2,2,0.5,2))
col<-color[1:length(colnames(catyrs)[!colnames(catyrs)%in%c("Plasticity","Phenotypic.gambit","IGE","GxE")])]
bp<-barplot(t(catyrs[,!colnames(catyrs)%in%c("Plasticity","Phenotypic.gambit","IGE","GxE")]),
col=col,las=1,border = NA,axes = FALSE)
bp<-barplot(t(catyrs[,!colnames(catyrs)%in%c("Plasticity","Phenotypic.gambit","IGE","GxE")]),
col=col,las=1,border = NA,axes = FALSE)
catyrs[,!colnames(catyrs)%in%c("Plasticity","Phenotypic.gambit","IGE","GxE")]
head(catyrs)
knitr::opts_chunk$set(echo = TRUE,out.extra='',fig.pos="H")
knitr::opts_knit$set(root.dir='../qgb_data/')
source("../R/literature-review.R")
library(scales)
library(knitr)
orig.file<-data.frame(read.delim("qgb.txt",sep='\t',quote=""),stringsAsFactors = FALSE)
qgb<-data.frame(read.csv("qgb.csv",header = TRUE),stringsAsFactors = FALSE)
qgb<-qgb[qgb$Human != "human",]
qgb<-search_line(c("none","not relevant","not behavior","not a behavior","not quantitative genetics","meeting abstract",
"not useful","plant","no abstract","just the abstract"),"Relevance.to.article",qgb,inverse = TRUE)
synth<-c(grep("review",qgb$Methods), grep("synthesis",qgb$Methods),grep("meta.*analysis",qgb$Methods),
grep("position p.*",qgb$Methods), grep("commentary",qgb$Methods), grep("intro.*issue",qgb$Methods))
syn<-qgb[synth[!duplicated(synth)],]
exp<-qgb[-synth[!duplicated(synth)],]
models<-c(grep("^model",exp$Methods),grep("stats",exp$Methods),grep("mathematical",exp$Methods),grep("statistical",exp$Methods),
grep("evolutionary model",exp$Methods),grep("theoretical model",exp$Methods), grep("simulation model",exp$Methods),
grep("game theoretic model",exp$Methods))
mod<-exp[models[!duplicated(models)],]
exp<-exp[-models[!duplicated(models)],]
paroff<-count_lines(keywords = "parent-offspring regression",column.name = "Method.classification",dat=exp)
#sibs
fullsib<-count_lines(keywords = "full-sib",column.name = "Method.classification",dat=exp,
remwords=c("cross-foster","common-garden","half/","selection"))
halfsib<-count_lines(keywords = "half-sib",column.name = "Method.classification",dat=exp,
remwords=c("cross-foster","common-garden","/full","selection"))
halfful<-count_lines(keywords = "half/full-sib",column.name = "Method.classification",dat=exp,
remwords=c("cross-foster","common-garden","selection"))
crfossib<-count_lines(keywords = "cross-foster",column.name = "Method.classification",dat=exp,
remwords=c("pedigree","F2"))
cgsib<-count_lines(keywords = "common-garden",column.name = "Method.classification",dat=exp)
#clones
clones<-count_lines(keywords = "clones",column.name = "Method.classification",dat=exp)
#cross-classified
factorial<-count_lines(keywords = "factorial",column.name = "Method.classification",dat=exp)
diallel<-count_lines(keywords = "diallel",column.name = "Method.classification",dat=exp)
backcross<-count_lines(keywords = "backcross",column.name = "Method.classification",dat=exp)
reciprocal<-count_lines(keywords = c("reciprocal","recirpocal"),column.name = "Method.classification",
dat=exp,"selection")
inbred<-count_lines(keywords = c("inbred","F\\d+"),column.name = "Method.classification",dat=exp,
remwords=c("backcross","reciprocal"))
crsfosf2<-count_lines(keywords = "cross-foster.*F2",column.name = "Method.classification",dat=exp)
#selection
selection<-count_lines(keywords =c("experiment", "selection"),column.name = "Method.classification",dat=exp)
#relatedness
pedigree<-count_lines(keywords = "pedigree",column.name = "Method.classification",dat=exp)
relatedness<-count_lines(keywords = "relatedness",column.name = "Method.classification",dat=exp)
#other
phenotype<-count_lines(keywords = "phenotypes",column.name = "Method.classification",dat=exp)
repeatability<-count_lines(keywords = "repeatability",column.name = "Method.classification",dat=exp)
other<-count_lines(".*","Method.classification",exp,
remwords=c("parent-offspring regression","full-sib","half-sib","half/full-sib",
"cross-foster","common-garden","clones","factorial","diallel","inbred",
"selection","pedigree","relatedness","QTL","GWAS","reciprocal",
"backcross","recirpocal","experiment","phenotype","repeatability","F\\d+"))
#QTL/GWAS
qtl<-count_lines(keywords = "QTL",column.name = "Method.classification",dat=exp)
gwas<-count_lines(keywords = "GWAS",column.name = "Method.classification",dat=exp)
kable(data.frame(Experiment=c("Parent-offspring Regression","Full-sib","Half-sib",
"Half and full-sib","Cross foster","Common garden",
"clones","factorial","inbred","backcross","reciprocal",
"diallel","selection","pedigree","relatedness","phenotype",
"repeatability","other","qtl","gwas"),
Counts=c(paroff,fullsib,halfsib,halfful,crfossib,cgsib,
clones,factorial,diallel,backcross,reciprocal,
inbred,selection,pedigree,relatedness,phenotype,
repeatability, other,qtl,gwas)))
regression<-search_line(keywords = "parent-offspring regression",column.name = "Method.classification",dat=exp)
#sibs
sibs<-search_line(keywords = c("cross-foster","sib","common-garden"),
column.name = "Method.classification",dat=exp,
remwords=c("pedigree","F2","selection","experiment"))
#clones
clones<-search_line(keywords = "clones",column.name = "Method.classification",dat=exp)
#cross-classified
crosses<-search_line(keywords = c("factorial","diallel","backcross","reciprocal","recirpocal",
"inbred","F\\d+", "cross-foster.*F2"),
column.name = "Method.classification",dat=exp)
#selection
selection<-search_line(keywords =c("experiment", "selection"),column.name = "Method.classification",dat=exp)
#relatedness
complex<-search_line(keywords = c("pedigree","relatedness"),column.name = "Method.classification",dat=exp)
#other
other<-search_line(c(".*","phenotypes","repeatability"),"Method.classification",exp,
remwords=c("parent-offspring regression","full-sib","half-sib","half/full-sib",
"cross-foster","common-garden","clones","factorial","diallel","inbred",
"selection","pedigree","relatedness","QTL","GWAS","reciprocal",
"backcross","recirpocal","experiment","F\\d+"))
#genetics
genetics<-search_line(keywords = c("QTL","GWAS"),column.name = "Method.classification",dat=exp)
#plot it
yrs<-do.call(rbind,lapply(levels(factor(exp$PY)),function(year){
df<-data.frame(ParentOffspringRegression=nrow(regression[regression$PY==year,]),
Sibs=nrow(sibs[sibs$PY==year,]),
Clones=nrow(clones[clones$PY==year,]),
CrossClassifiedDesigns=nrow(crosses[crosses$PY==year,]),
Selection=nrow(selection[selection$PY==year,]),
ComplexRelatedness=nrow(complex[complex$PY==year,]),
OtherDesigns=nrow(other[other$PY==year,]),
Genetics=nrow(genetics[genetics$PY==year,]))
}))
rownames(yrs)<-levels(factor(exp$PY))
cols<-c('#d73027','#f46d43','#fdae61','#fee090','#e0f3f8','#abd9e9','#74add1','#4575b4')
names(cols)<-colnames(yrs)
ltys<-c(1:6,2,3)
names(ltys)<-colnames(yrs)
pchs<-c(0,1,2,6,15,17:19)
plot(range(levels(factor(exp$PY))),c(0,max(yrs)),bty='l',type = 'n',
xlab="Year",ylab="Number of Studies",axes=FALSE)
for(i in 1:ncol(yrs)){
points(levels(factor(exp$PY)),yrs[,i],col=alpha(cols[i],0.75),pch=pchs[i],cex=2)
lines(levels(factor(exp$PY)),yrs[,i],col=alpha(cols[i],0.75),lty=ltys[i],lwd=2)
}
legend("topleft",colnames(yrs),col=cols,lty=ltys,bty='n',lwd=2,pch=pchs,cex=2)
axis(1,at=seq(1968,2018,10))
axis(2,las=1)
#try a bar chart
bp<-barplot(t(yrs),col=cols,border = NA,axes=FALSE)
legend("topleft",colnames(yrs),col=cols,bty='n',pch=15)
text(label=rownames(yrs),bp,-2,xpd=TRUE,srt=90)
axis(2,las=1,at=seq(0,30,5))
mtext("Number of Studies",2,line=2)
kable(table(factor(exp$species))[order(table(factor(exp$species)),decreasing = TRUE)],col.names = c("Species name","Number of studies"))
kable(table(factor(exp$common.name))[order(table(factor(exp$common.name)),decreasing = TRUE)],col.names = c("Common name","Number of studies"))
kable(table(factor(exp$Class))[order(table(factor(exp$Class)),decreasing = TRUE)],col.names = c("Class","Number of studies"))
# Creating a table in the format that I want, with class and species and number of studies.
spp<-data.frame(table(factor(exp$species))[order(table(factor(exp$species)),decreasing = TRUE)])
colnames(spp)<-c("Species","Number.of.studies")
spp$Class<-unlist(lapply(spp$Species,function(sp,df){
unique(df[df$species %in% sp,"Class"])
},df=exp))
cls<-data.frame(table(factor(exp$Class))[order(table(factor(exp$Class)),decreasing = TRUE)])
colnames(cls)<-c("Class","Number.of.studies")
cls<-data.frame(Species="All",Number.of.studies=cls$Number.of.studies,Class=cls$Class,stringsAsFactors = FALSE)
spcl<-data.frame(rbind(spp,cls),stringsAsFactors = FALSE)
write.table(spcl[order(spcl$Class,spcl$Number.of.studies,decreasing=TRUE),c(3,1,2)],"qgbSpeciesClass.csv",row.names=FALSE,sep=",")
cats<-count_filled_lines(exp,16:(ncol(exp)-1))#apply(exp[,16:(ncol(exp)-1)],2,function(c){ length(c[c!=""])})
kable(cats[order(cats,decreasing = TRUE)],col.names = "Number of studies")
write.table(cats[order(cats,decreasing = TRUE)],"QGB_categories.csv",sep=",")
catyrs<-do.call(rbind,lapply(levels(factor(exp$PY)),function(year,exp,cats){
yr<-exp[exp$PY==year,]
cnts<-apply(yr[,names(cats)],2,function(d){ length(d[d!=""])})
return(cnts)
},exp=exp,cats=cats))
color <- c("#e6194b","#3cb44b","#ffe119","#0082c8","#f58231","#911eb3","#46f0f0","#f032e6","#d2f53c",
"#fabebe","#008080","#e6beff","#aa6e28","#fffac8","#800000","#aaffc3","#808000","#ffd8b1",
"#000080","#808080","#FFFFFF","#000000")
#Don't include this one
col<-color[1:length(catyrs)]
bp<-barplot(t(catyrs),
col=col,las=1,border = NA,axes = FALSE)
legend("topleft",colnames(catyrs),
col=col,bty='n',pch=15)
axis(2,las=1,at=seq(0,50,10))
text(bp,-2,xpd=TRUE,srt=90,labels = levels(factor(exp$PY)))
mtext("Number of studies",2,line=2)
col<-color[1:length(catyrs[,!colnames(catyrs)%in%c("Plasticity","Phenotypic.gambit","IGE","GxE")])]
bp<-barplot(t(catyrs[,!colnames(catyrs)%in%c("Plasticity","Phenotypic.gambit","IGE","GxE")]),
col=col,las=1,border = NA,axes = FALSE)
legend("topleft",colnames(catyrs[,!colnames(catyrs)%in%c("Plasticity","Phenotypic.gambit","IGE","GxE")]),
col=col,bty='n',pch=15)
axis(2,las=1,at=seq(0,50,10))
text(bp,-2,xpd=TRUE,srt=90,labels = levels(factor(exp$PY)))
mtext("Number of studies",2,line=2)
pers<-qgb[qgb$Personality!="",]
synth<-c(grep("review",pers$Methods), grep("synthesis",pers$Methods),grep("meta.*analysis",pers$Methods),
grep("position p.*",pers$Methods), grep("commentary",pers$Methods), grep("intro.*issue",pers$Methods))
psyn<-pers[synth[!duplicated(synth)],]
pexp<-pers[-synth[!duplicated(synth)],]
models<-c(grep("^model",pexp$Methods),grep("stats",pexp$Methods),grep("mathematical",pexp$Methods),grep("statistical",pexp$Methods),
grep("evolutionary model",pexp$Methods),grep("theoretical model",pexp$Methods), grep("simulation model",pexp$Methods),
grep("game theoretic model",pexp$Methods))
pmod<-pexp[models[!duplicated(models)],]
pexp<-pexp[-models[!duplicated(models)],]
kable(table(factor(pexp$species))[order(table(factor(pexp$species)),decreasing = TRUE)],col.names = c("Species name","Number of studies"))
kable(table(factor(pexp$common.name))[order(table(factor(pexp$common.name)),decreasing = TRUE)],col.names = c("Common name","Number of studies"))
kable(table(factor(pexp$Class))[order(table(factor(pexp$Class)),decreasing = TRUE)],col.names = c("Class","Number of studies"))
pery<-data.frame(table(pers$PY))
colnames(pery)<-c("Year","NumPapers")
png("figs/Personality_Timeline.png",height=4,width=6,units="in",res=300)
par(mar=c(4,4,2,2))
plot(as.numeric(as.character(pery$Year)),pery$NumPapers,bty='l',xlab="Year",ylab="Number of Papers",
xaxt='n',pch=19,las=1)
axis(1,at=seq(min(as.numeric(as.character(pery$Year))),max(as.numeric(as.character(pery$Year)))),labels = NA)
text(x=seq(min(as.numeric(as.character(pery$Year))),max(as.numeric(as.character(pery$Year))),3),y=-1.25,
xpd=TRUE,srt=90,labels = seq(min(as.numeric(as.character(pery$Year))),max(as.numeric(as.character(pery$Year))),3))
dev.off()
plasticity<-exp[exp$Plasticity!="",]
cnt<-count_filled_lines(plasticity,16:(ncol(plasticity)-1))
#or proportionally
prp<-count_filled_lines(plasticity,16:(ncol(plasticity)-1))/nrow(exp[exp$Plasticity!="",])
kable(data.frame(names(cnt),cnt,prp,stringsAsFactors = FALSE),
col.names = c("Category","Number of studies","Proportion of those with plasticity"),row.names=FALSE)
ige<-exp[exp$IGE!="",]
cnt<-count_filled_lines(ige,16:(ncol(ige)-1))
#or proportionally
prp<-count_filled_lines(ige,16:(ncol(ige)-1))/nrow(exp[exp$IGE!="",])
kable(data.frame(names(cnt),cnt,prp,stringsAsFactors = FALSE),
col.names = c("Category","Number of studies","Proportion of those with plasticity"),row.names=FALSE)
gxe<-exp[exp$GxE!="",]
cnt<-count_filled_lines(gxe,16:(ncol(gxe)-1))
#or proportionally
prp<-count_filled_lines(gxe,16:(ncol(gxe)-1))/nrow(exp[exp$GxE!="",])
kable(data.frame(names(cnt),cnt,prp,stringsAsFactors = FALSE),
col.names = c("Category","Number of studies","Proportion of those with plasticity"),row.names=FALSE)
#remove ones from 2018
tw18<-which(rownames(yrs)==2018)
tw18
yrs<-yrs[-tw18,]
catyrs<-catyrs[-tw18,]
par(mfrow=c(2,1),mar=c(0.5,2,1,2),oma=c(2,2,2,2))
cols<-color[1:ncol(yrs)]
bp<-barplot(t(yrs),col=cols,border = NA,axes=FALSE,xaxt='n')
legend(x = -1,y=31,c("Parent-offspring regression","Sibling designs","Clones","Cross-classified designs",
"Selection experiments","Complex relatedness","Other designs", "Genetics"),
col=cols,bty='n',pch=15,xpd=TRUE)
#text(label=rownames(yrs),bp,-3,xpd=TRUE,srt=90)
axis(2,las=1,at=seq(0,30,5))
par(mar=c(2,2,0.5,2))
col<-color[1:length(colnames(catyrs)[!colnames(catyrs)%in%c("Plasticity","Phenotypic.gambit","IGE","GxE")])]
bp<-barplot(t(catyrs[,!colnames(catyrs)%in%c("Plasticity","Phenotypic.gambit","IGE","GxE")]),
col=col,las=1,border = NA,axes = FALSE)
legend(x = -1,y=45,c("Personality","Mate choice","Reproduction/Fecundity","Parental Care",
"Communication","Foraging","Predator avoidance", "Locomotion", "Migration",
"Life History","Social behavior", "Cooperation","Learning"),
col=col,bty='n',pch=15,ncol=2)
axis(2,las=1,at=seq(0,50,10))
text(bp,-5,xpd=TRUE,srt=90,labels = levels(factor(exp$PY)))
mtext("Number of studies",2,outer=TRUE)
png("figs/YearPlots.png",height=6,width=6,res=300,units="in")
par(mfrow=c(2,1),mar=c(0.5,2,1,2),oma=c(2,2,2,2))
cols<-color[1:ncol(yrs)]
bp<-barplot(t(yrs),col=cols,border = NA,axes=FALSE,xaxt='n')
legend(x = -1,y=31,c("Parent-offspring regression","Sibling designs","Clones","Cross-classified designs",
"Selection experiments","Complex relatedness","Other designs", "Genetics"),
col=cols,bty='n',pch=15,xpd=TRUE)
#text(label=rownames(yrs),bp,-3,xpd=TRUE,srt=90)
axis(2,las=1,at=seq(0,30,5))
par(mar=c(2,2,0.5,2))
col<-color[1:length(colnames(catyrs)[!colnames(catyrs)%in%c("Plasticity","Phenotypic.gambit","IGE","GxE")])]
bp<-barplot(t(catyrs[,!colnames(catyrs)%in%c("Plasticity","Phenotypic.gambit","IGE","GxE")]),
col=col,las=1,border = NA,axes = FALSE)
legend(x = -1,y=45,c("Personality","Mate choice","Reproduction/Fecundity","Parental Care",
"Communication","Foraging","Predator avoidance", "Locomotion", "Migration",
"Life History","Social behavior", "Cooperation","Learning"),
col=col,bty='n',pch=15,ncol=2)
axis(2,las=1,at=seq(0,50,10))
text(bp,-5,xpd=TRUE,srt=90,labels = levels(factor(exp$PY)))
mtext("Number of studies",2,outer=TRUE)
dev.off()
